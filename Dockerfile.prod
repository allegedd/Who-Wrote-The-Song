# Rubyイメージ
FROM ruby:3.3.6

# ロケール,タイムゾーン
ENV LANG C.UTF-8
ENV TZ Asia/Tokyo

# 本番環境設定
ENV RAILS_ENV production
ENV BUNDLE_WITHOUT development:test

# パッケージインストール
RUN apt-get update -qq \
    && apt-get install -y ca-certificates curl gnupg \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && NODE_MAJOR=20 \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && wget --quiet -O - /tmp/pubkey.gpg https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update -qq && apt-get install -y build-essential libpq-dev nodejs yarn

# コンテナのworkingディレクトリへ移動、gemインストール
RUN mkdir /app
WORKDIR /app
RUN gem install bundler

# Gemfileのみコピーして依存関係をインストール（キャッシュ効率化）
COPY Gemfile Gemfile.lock ./
RUN bundle install

# package.jsonのみコピーしてnpmパッケージをインストール（キャッシュ効率化）
COPY package.json yarn.lock ./
RUN yarn install

# アプリケーション全体をコピー
COPY . /app

# アセットのプリコンパイル（本番環境用）
RUN SECRET_KEY_BASE_DUMMY=1 bundle exec rails assets:precompile

# サーバー起動時のPIDファイルを削除
RUN rm -f tmp/pids/server.pid

# ポート公開
EXPOSE 3000

# サーバー起動
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]